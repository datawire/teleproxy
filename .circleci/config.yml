version: 2.1

commands:
  aws-install:
    steps:
      - run: |
          sudo pip install awscli

  golang-install:
    parameters:
      os:
        type: string
    steps:
      # Golang install

      # For some reason it is faster to curl into a file than to just
      # pipe the curl straight to tar.
      - run: |
          sudo rm -rf /usr/local/go &&
          curl https://dl.google.com/go/go1.12.5.<<parameters.os>>-amd64.tar.gz -o /tmp/go.tgz &&
          sudo tar -C /usr/local -xzf /tmp/go.tgz

      # Golang paths
      - run: |
          echo 'export PATH=${PATH}:/usr/local/go/bin' >> ${BASH_ENV} &&
          echo 'export GOPATH=${HOME}/go' >> ${BASH_ENV}

      - run: 'echo PATH: ${PATH} || true'
      - run: 'echo GOPATH: ${GOPATH} || true'
      - run: go version

  kubectl-install:
    steps:
      - run: curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.12.2/bin/$(go env GOOS)/$(go env GOARCH)/kubectl
      - run: chmod a+x ./kubectl
      - run: sudo mv kubectl /usr/local/bin

  save-go-mod-cache:
    steps:
      - run:
          command: |
            mkdir -p "$(go env GOPATH)/pkg/mod/cache/download/"
            rsync -av --delete "$(go env GOPATH)/pkg/mod/cache/download/" ~/goproxy
          when: always
      - save_cache:
          # Use {{arch}} as a proxy for
          # {{.Environment.HOME}}... because despite what the CircleCI
          # docs say, {{.Environment.HOME}} evaluates to "<no value>".
          #
          # Why put it in $HOME, instead of /tmp or something, and be
          # able to share the cache?  Because /tmp is a symlink to
          # /private/tmp on macOS, and CircleCI is broken on macOS
          # whenever symlinks are involved.
          key: go-mod-cache-{{ arch }}-{{ checksum "go.mod" }}-{{ .BuildNum }}
          paths: "~/goproxy"
          when: always
  restore-go-mod-cache:
    steps:
      - restore_cache:
          keys:
            - go-mod-cache-{{ arch }}-{{ checksum "go.mod" }}-
            - go-mod-cache-{{ arch }}-
      - run: |
          GOPROXY=file://$HOME/goproxy make go-get || true

  main:
    steps:
      - checkout
      - restore-go-mod-cache
      - run: .circleci/with-docker.sh make check
      - save-go-mod-cache
      - run: make build
      - run:
          name: "gather logs"
          when: always
          command: |
            rsync -ma --include='*/' --include='*.tap' --include='*.log' --exclude='*' . /tmp/test-logs
      - store_artifacts:
          path: /tmp/test-logs
          destination: test-logs
      - run: |
          if test -n "$CIRCLE_TAG"; then
              export AWS_ACCESS_KEY_ID=$DEPLOY_KEY_ID
              export AWS_SECRET_ACCESS_KEY=$DEPLOY_KEY
              make release
          fi

jobs:

  macos-build:
    macos:
      xcode: "9.0"
    working_directory: ~/repo
    steps:
      - restore_cache:
          keys:
            - brew-cache
      - run: brew install docker-machine-driver-xhyve docker &&
             sudo chown root:wheel /usr/local/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve &&
             sudo chmod u+s /usr/local/opt/docker-machine-driver-xhyve/bin/docker-machine-driver-xhyve
      - run: docker-machine create default --driver xhyve
      - save_cache:
          key:
            - brew-cache
          paths: /usr/local/Homebrew
          when: always
      - aws-install
      - golang-install:
          os: darwin
      - kubectl-install
      - main

  machine-build:
    machine: true
    working_directory: ~/repo
    steps:
      - aws-install
      - golang-install:
          os: linux
      - kubectl-install
      - main

workflows:
  version: 2.1

  multibuild:
    jobs:
      - machine-build:
          filters:
            tags:
              only: /.*/
      - macos-build:
          filters:
            tags:
              only: /.*/
